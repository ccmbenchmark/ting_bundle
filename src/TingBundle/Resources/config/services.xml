<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <instanceof id="CCMBenchmark\Ting\Serializer\SerializerInterface" autowire="true">
            <!-- Auto tag all instances of SerializerInterface with "ting.serializer" -->
            <tag name="ting.serializer" />
        </instanceof>

        <service id="ting" class="CCMBenchmark\TingBundle\Repository\RepositoryFactory" public="true">
            <argument type="service" id="ting.connectionpool" />
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="ting.queryfactory" />
            <argument type="service" id="ting.collectionfactory" />
            <argument type="service" id="ting.unitofwork" />
            <argument type="service" id="ting.cache" />
            <argument type="service" id="ting.serializerfactory" />
            <call method="loadMetadata">
                <argument>%kernel.cache_dir%</argument>
                <argument>%ting.cache_file%</argument>
                <argument>%ting.repositories%</argument>
                <argument type="service" id="file_locator" />
                <argument type="service" id="ting.configuration_resolver" on-invalid="null" />
            </call>
        </service>

        <service id="ting.metadatarepository" class="CCMBenchmark\Ting\MetadataRepository" public="true">
            <argument type="service" id="ting.serializerfactory" />
            <argument type="service" id="ting.cache.property_access" />
        </service>
        <service id="CCMBenchmark\Ting\MetadataRepository" alias="ting.metadatarepository" />

        <service id="ting.serializerfactory" class="CCMBenchmark\TingBundle\Serializer\SerializerFactory" public="true">
        </service>
        <service id="CCMBenchmark\Ting\Serializer\SerializerFactoryInterface" alias="ting.serializerfactory" />

        <service id="ting.queryfactory" class="CCMBenchmark\Ting\Query\QueryFactory" public="true">
        </service>
        <service id="CCMBenchmark\Ting\Query\QueryFactory" alias="ting.queryfactory" />

        <service id="ting.driverlogger" synthetic="true" public="true">
        </service>

        <service id="ting.connectionpool" class="CCMBenchmark\Ting\ConnectionPool" public="true">
            <call method="setConfig">
                <argument>%ting.connections%</argument>
            </call>
            <call method="setDatabaseOptions">
                <argument>%ting.database_options%</argument>
            </call>
        </service>
        <service alias="ting.connectionpool" id="CCMBenchmark\Ting\ConnectionPool" />

        <service id="ting.unitofwork" class="CCMBenchmark\Ting\UnitOfWork" public="true">
            <argument type="service" id="ting.connectionpool" />
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="ting.queryfactory" />
        </service>
        <service id="CCMBenchmark\Ting\UnitOfWork" alias="ting.unitofwork" />

        <service id="ting.hydrator" class="CCMBenchmark\Ting\Repository\Hydrator" shared="false" public="true">
            <call method="setMetadataRepository">
                <argument type="service" id="ting.metadatarepository" />
            </call>
            <call method="setUnitOfWork">
                <argument type="service" id="ting.unitofwork" />
            </call>
        </service>

        <service id="ting.hydrator_single_object" class="CCMBenchmark\Ting\Repository\HydratorSingleObject" shared="false" public="true">
            <call method="setMetadataRepository">
                <argument type="service" id="ting.metadatarepository" />
            </call>
            <call method="setUnitOfWork">
                <argument type="service" id="ting.unitofwork" />
            </call>
        </service>

        <service id="ting.collectionfactory" class="CCMBenchmark\Ting\Repository\CollectionFactory" public="true">
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="ting.unitofwork" />
            <argument type="service" id="ting.hydrator" />
        </service>
        <service id="CCMBenchmark\Ting\Repository\CollectionFactory" alias="ting.collectionfactory" />

        <service id="ting.cache" class="CCMBenchmark\Ting\Cache\Cache" public="true">
        </service>
        <service id="Doctrine\Common\Cache\Cache" alias="ting.cache" />

        <service id="ting.driver_data_collector" class="CCMBenchmark\TingBundle\DataCollector\TingDriverDataCollector" public="true">
            <tag name="data_collector" template="@Ting/Collector/driverCollector.html.twig" id="ting.driver" />
        </service>

        <service id="ting.cache_data_collector" class="CCMBenchmark\TingBundle\DataCollector\TingCacheDataCollector" public="true">
            <tag name="data_collector" template="@Ting/Collector/cacheCollector.html.twig" id="ting.cache" />
        </service>

        <service id="ting.metadata_warmer" class="CCMBenchmark\TingBundle\Cache\MetadataWarmer" public="true">
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="file_locator" />
            <argument>%ting.repositories%</argument>
            <argument>%ting.cache_file%</argument>

            <tag name="kernel.cache_warmer" priority="0" />
        </service>

        <service id="ting.validator.unique.entity" class="CCMBenchmark\TingBundle\Validator\Constraints\UniqueEntityValidator" public="true">
            <argument type="service" id="ting" />
            <tag name="validator.constraint_validator" />
        </service>

        <service id="ting.security.user_provider" abstract="true" class="CCMBenchmark\TingBundle\Security\EntityUserProvider">
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="ting" />
        </service>
        
        <service id="ting.entity_value_resolver" class="CCMBenchmark\TingBundle\ArgumentResolver\EntityValueResolver">
            <tag name="controller.argument_value_resolver" priority="110" />
            <argument type="service" id="ting.metadatarepository" />
            <argument type="service" id="ting" />
            <argument type="service" id="Symfony\Component\ExpressionLanguage\ExpressionLanguage" on-invalid="null" />
        </service>

        <service id="CCMBenchmark\Ting\Serializer\Json" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\BackedEnum" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\DateTime" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\DateTimeImmutable" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\DateTimeZone" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\Geometry" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\Ting\Serializer\Uuid" >
            <tag name="ting.serializer" />
        </service>
        <service id="CCMBenchmark\TingBundle\Serializer\SymfonyJsonSerializer" >
            <argument id="Symfony\Component\Serializer\SerializerInterface" on-invalid="null" />
            <tag name="ting.serializer" />
        </service>
    </services>
</container>
